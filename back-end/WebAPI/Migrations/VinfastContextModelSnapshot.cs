// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAPI.DataContext;

#nullable disable

namespace WebAPI.Migrations
{
    [DbContext(typeof(VinfastContext))]
    partial class VinfastContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebAPI.Models.Cars", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Car ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ColorImage1")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Color Image 1");

                    b.Property<string>("ColorImage2")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Color Image 2");

                    b.Property<string>("ColorImage3")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Color Image 3");

                    b.Property<string>("ColorImage4")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Color Image 4");

                    b.Property<string>("ColorImage5")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Color Image 5");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Image");

                    b.Property<string>("ImageBanner")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Image Banner");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Car Name");

                    b.Property<double>("PriceBatteryOwn")
                        .HasColumnType("float")
                        .HasColumnName("Price Battery Own");

                    b.Property<double>("PriceBatteryRental")
                        .HasColumnType("float")
                        .HasColumnName("Price Battery Rental");

                    b.Property<double>("PriceDeposite")
                        .HasColumnType("float")
                        .HasColumnName("Price Deposite");

                    b.Property<int>("Seats")
                        .HasColumnType("int")
                        .HasColumnName("Seats");

                    b.Property<string>("SpecImage")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Spec Image");

                    b.HasKey("Id");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ColorImage1 = "vinfast-vf3-white.png",
                            ColorImage2 = "vinfast-vf3-grey.png",
                            ColorImage3 = "vinfast-vf3-red.png",
                            ColorImage4 = "vinfast-vf3-yellow.png",
                            ColorImage5 = "vinfast-vf3-green.png",
                            Image = "vinfast-vf3.png",
                            ImageBanner = "vinfast-banner.png",
                            Name = "Vinfast VF3",
                            PriceBatteryOwn = 322000000.0,
                            PriceBatteryRental = 240000000.0,
                            PriceDeposite = 15000000.0,
                            Seats = 4,
                            SpecImage = "vinfast-vf3-spec.png"
                        },
                        new
                        {
                            Id = 2,
                            ColorImage1 = "vinfast-vf5-white.png",
                            ColorImage2 = "vinfast-vf5-grey.png",
                            ColorImage3 = "vinfast-vf5-red.png",
                            ColorImage4 = "vinfast-vf5-yellow.png",
                            ColorImage5 = "vinfast-vf5-green.png",
                            Image = "vinfast-vf5.png",
                            ImageBanner = "vinfast-banner.png",
                            Name = "Vinfast VF5",
                            PriceBatteryOwn = 540000000.0,
                            PriceBatteryRental = 460000000.0,
                            PriceDeposite = 20000000.0,
                            Seats = 5,
                            SpecImage = "vinfast-vf5-spec.png"
                        },
                        new
                        {
                            Id = 3,
                            ColorImage1 = "vinfast-vf6-white.png",
                            ColorImage2 = "vinfast-vf6-black.png",
                            ColorImage3 = "vinfast-vf6-red.png",
                            ColorImage4 = "vinfast-vf6-green.png",
                            ColorImage5 = "vinfast-vf6-blue.png",
                            Image = "vinfast-vf6.png",
                            ImageBanner = "vinfast-banner.png",
                            Name = "Vinfast VF6",
                            PriceBatteryOwn = 765000000.0,
                            PriceBatteryRental = 675000000.0,
                            PriceDeposite = 30000000.0,
                            Seats = 5,
                            SpecImage = "vinfast-vf6-spec.png"
                        },
                        new
                        {
                            Id = 4,
                            ColorImage1 = "vinfast-vf7-white.png",
                            ColorImage2 = "vinfast-vf7-black.png",
                            ColorImage3 = "vinfast-vf7-red.png",
                            ColorImage4 = "vinfast-vf7-green.png",
                            ColorImage5 = "vinfast-vf7-blue.png",
                            Image = "vinfast-vf7.png",
                            ImageBanner = "vinfast-banner.png",
                            Name = "Vinfast VF7",
                            PriceBatteryOwn = 999000000.0,
                            PriceBatteryRental = 850000000.0,
                            PriceDeposite = 50000000.0,
                            Seats = 5,
                            SpecImage = "vinfast-vf7-spec.png"
                        },
                        new
                        {
                            Id = 5,
                            ColorImage1 = "vinfast-vf8-white.png",
                            ColorImage2 = "vinfast-vf8-black.png",
                            ColorImage3 = "vinfast-vf8-red.png",
                            ColorImage4 = "vinfast-vf8-green.png",
                            ColorImage5 = "vinfast-vf8-blue.png",
                            Image = "vinfast-vf8.png",
                            ImageBanner = "vinfast-banner.png",
                            Name = "Vinfast VF8",
                            PriceBatteryOwn = 1359000000.0,
                            PriceBatteryRental = 1170000000.0,
                            PriceDeposite = 50000000.0,
                            Seats = 5,
                            SpecImage = "vinfast-vf8-spec.png"
                        },
                        new
                        {
                            Id = 6,
                            ColorImage1 = "vinfast-vf9-white.png",
                            ColorImage2 = "vinfast-vf9-black.png",
                            ColorImage3 = "vinfast-vf9-red.png",
                            ColorImage4 = "vinfast-vf9-green.png",
                            ColorImage5 = "vinfast-vf9-blue.png",
                            Image = "vinfast-vf9.png",
                            ImageBanner = "vinfast-banner.png",
                            Name = "Vinfast VF9",
                            PriceBatteryOwn = 2129000000.0,
                            PriceBatteryRental = 1604000000.0,
                            PriceDeposite = 50000000.0,
                            Seats = 7,
                            SpecImage = "vinfast-vf9-spec.png"
                        });
                });

            modelBuilder.Entity("WebAPI.Models.Roles", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Role ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Role Name");

                    b.HasKey("RoleId");

                    b.ToTable("User Roles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            RoleName = "Admin"
                        },
                        new
                        {
                            RoleId = 2,
                            RoleName = "User"
                        });
                });

            modelBuilder.Entity("WebAPI.Models.Users", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("User ID");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("User Address");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("Created At");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("User Email");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("Is Deleted");

                    b.Property<DateTime>("LastChange")
                        .HasColumnType("datetime2")
                        .HasColumnName("Last Change");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("User Password");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Phone Number");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("User Role");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("User Name");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d3b8a1e1-4d3b-4c3b-8a1e-1d3b4c3b8a1e"),
                            Address = "123 Admin St",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "admin@example.com",
                            IsDeleted = false,
                            LastChange = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Password = "393a5cc22f47320f9d3108feb381652d79974a58e58ec0a68a0de3b289d8a5ef",
                            Phone = "1234567890",
                            RoleId = 1,
                            UserName = "admin"
                        },
                        new
                        {
                            Id = new Guid("e4b8a1e1-5d4b-5c4b-9a1e-2d4b5c4b9a1e"),
                            Address = "456 User St",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "user@example.com",
                            IsDeleted = false,
                            LastChange = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Password = "24e13074bec3f7bb03bc30280399bede77eb49cef89d44581a90ec24463c2ba6",
                            Phone = "0987654321",
                            RoleId = 2,
                            UserName = "user"
                        });
                });

            modelBuilder.Entity("WebAPI.Models.Users", b =>
                {
                    b.HasOne("WebAPI.Models.Roles", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("WebAPI.Models.Roles", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
