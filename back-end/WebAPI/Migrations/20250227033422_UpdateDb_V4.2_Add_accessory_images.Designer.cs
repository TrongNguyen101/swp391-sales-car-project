// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAPI.DataContext;

#nullable disable

namespace WebAPI.Migrations
{
    [DbContext(typeof(VinfastContext))]
    [Migration("20250227033422_UpdateDb_V4.2_Add_accessory_images")]
    partial class UpdateDb_V42_Add_accessory_images
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebAPI.Models.Accessory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Accessory ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("Category ID");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Accessory Image");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("Is Deleted");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Accessory Name");

                    b.Property<double>("Price")
                        .HasColumnType("float")
                        .HasColumnName("Accessory Price");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Accessory");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 5,
                            Image = "Sac_tai_nha.png",
                            IsDeleted = false,
                            Name = "VinFast Home Charger",
                            Price = 6000000.0
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 5,
                            Image = "VF3_tham_nhua.png",
                            IsDeleted = false,
                            Name = "Thảm nhựa VF3",
                            Price = 1668000.0
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 5,
                            Image = "VF3_Camera_lui.png",
                            IsDeleted = false,
                            Name = "Camera Lùi VF3",
                            Price = 26720000.0
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 6,
                            Image = "VF5_tham_nhua.png",
                            IsDeleted = false,
                            Name = "Thảm nhựa VF5",
                            Price = 1969000.0
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 6,
                            Image = "VF5_Goi_dan_phim_cach_nhiet.png",
                            IsDeleted = false,
                            Name = "Gói Dán Film Cách Nhiệt VinFast VF5",
                            Price = 5500000.0
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 6,
                            Image = "VF5_Tham_cop.png",
                            IsDeleted = false,
                            Name = "Thảm cốp 3D VF5",
                            Price = 990000.0
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 7,
                            Image = "VF6_Goi_dan_phim_cach_nhiet.png",
                            IsDeleted = false,
                            Name = "Gói dán film cách nhiệt VF6",
                            Price = 5500000.0
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 7,
                            Image = "VF6_tham_nhua.png",
                            IsDeleted = false,
                            Name = "Thảm nhựa 3D VF6",
                            Price = 1990000.0
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 7,
                            Image = "VF6_Tham_cop.png",
                            IsDeleted = false,
                            Name = "Thảm cốp 3D VF6",
                            Price = 990000.0
                        });
                });

            modelBuilder.Entity("WebAPI.Models.AccessoryColor", b =>
                {
                    b.Property<int>("ColorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Color ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ColorId"));

                    b.Property<int>("AccessoryId")
                        .HasColumnType("int")
                        .HasColumnName("Accessory ID");

                    b.Property<string>("ColorImage")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Color Image");

                    b.Property<string>("ColorName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Color Name");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("Is Deleted");

                    b.HasKey("ColorId");

                    b.HasIndex("AccessoryId");

                    b.ToTable("AccessoryColor");

                    b.HasData(
                        new
                        {
                            ColorId = 1,
                            AccessoryId = 1,
                            ColorImage = "homecharger-1.png",
                            ColorName = "White",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 2,
                            AccessoryId = 1,
                            ColorImage = "homecharger-2.png",
                            ColorName = "White",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 3,
                            AccessoryId = 1,
                            ColorImage = "homecharger-3.png",
                            ColorName = "White",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 4,
                            AccessoryId = 1,
                            ColorImage = "homecharger-4.png",
                            ColorName = "White",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 5,
                            AccessoryId = 2,
                            ColorImage = "VF3_tham_nhua_detail1.png",
                            ColorName = "White",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 6,
                            AccessoryId = 2,
                            ColorImage = "VF3_tham_nhua_detail2.png",
                            ColorName = "White",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 7,
                            AccessoryId = 3,
                            ColorImage = "VF3_camera_lui_1.jpg",
                            ColorName = "White",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 8,
                            AccessoryId = 3,
                            ColorImage = "VF3_camera_lui_1.jpg",
                            ColorName = "White",
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("WebAPI.Models.CarColor", b =>
                {
                    b.Property<int>("ColorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Color ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ColorId"));

                    b.Property<int>("CarId")
                        .HasColumnType("int")
                        .HasColumnName("Car ID");

                    b.Property<string>("ColorImage")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Color Image");

                    b.Property<string>("ColorName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Color Name");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("Is Deleted");

                    b.HasKey("ColorId");

                    b.HasIndex("CarId");

                    b.ToTable("CarColor");

                    b.HasData(
                        new
                        {
                            ColorId = 1,
                            CarId = 1,
                            ColorImage = "vinfast-vf3-white.png",
                            ColorName = "White",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 2,
                            CarId = 1,
                            ColorImage = "vinfast-vf3-grey.png",
                            ColorName = "Grey",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 3,
                            CarId = 1,
                            ColorImage = "vinfast-vf3-red.png",
                            ColorName = "Red",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 4,
                            CarId = 1,
                            ColorImage = "vinfast-vf3-yellow.png",
                            ColorName = "Yellow",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 5,
                            CarId = 1,
                            ColorImage = "vinfast-vf3-green.png",
                            ColorName = "Green",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 6,
                            CarId = 2,
                            ColorImage = "vinfast-vf5-white.png",
                            ColorName = "White",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 7,
                            CarId = 2,
                            ColorImage = "vinfast-vf5-grey.png",
                            ColorName = "Grey",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 8,
                            CarId = 2,
                            ColorImage = "vinfast-vf5-red.png",
                            ColorName = "Red",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 9,
                            CarId = 2,
                            ColorImage = "vinfast-vf5-yellow.png",
                            ColorName = "Yellow",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 10,
                            CarId = 2,
                            ColorImage = "vinfast-vf5-green.png",
                            ColorName = "Green",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 11,
                            CarId = 3,
                            ColorImage = "vinfast-vf6-white.png",
                            ColorName = "White",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 12,
                            CarId = 3,
                            ColorImage = "vinfast-vf6-black.png",
                            ColorName = "Black",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 13,
                            CarId = 3,
                            ColorImage = "vinfast-vf6-red.png",
                            ColorName = "Red",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 14,
                            CarId = 3,
                            ColorImage = "vinfast-vf6-green.png",
                            ColorName = "Green",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 15,
                            CarId = 3,
                            ColorImage = "vinfast-vf6-blue.png",
                            ColorName = "Blue",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 16,
                            CarId = 4,
                            ColorImage = "vinfast-vf7-white.png",
                            ColorName = "White",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 17,
                            CarId = 4,
                            ColorImage = "vinfast-vf7-black.png",
                            ColorName = "Black",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 18,
                            CarId = 4,
                            ColorImage = "vinfast-vf7-red.png",
                            ColorName = "Red",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 19,
                            CarId = 4,
                            ColorImage = "vinfast-vf7-green.png",
                            ColorName = "Green",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 20,
                            CarId = 4,
                            ColorImage = "vinfast-vf7-blue.png",
                            ColorName = "Blue",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 21,
                            CarId = 5,
                            ColorImage = "vinfast-vf8-white.png",
                            ColorName = "White",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 22,
                            CarId = 5,
                            ColorImage = "vinfast-vf8-black.png",
                            ColorName = "Black",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 23,
                            CarId = 5,
                            ColorImage = "vinfast-vf8-red.png",
                            ColorName = "Red",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 24,
                            CarId = 5,
                            ColorImage = "vinfast-vf8-green.png",
                            ColorName = "Green",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 25,
                            CarId = 5,
                            ColorImage = "vinfast-vf8-blue.png",
                            ColorName = "Blue",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 26,
                            CarId = 6,
                            ColorImage = "vinfast-vf9-white.png",
                            ColorName = "White",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 27,
                            CarId = 6,
                            ColorImage = "vinfast-vf9-black.png",
                            ColorName = "Black",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 28,
                            CarId = 6,
                            ColorImage = "vinfast-vf9-red.png",
                            ColorName = "Red",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 29,
                            CarId = 6,
                            ColorImage = "vinfast-vf9-green.png",
                            ColorName = "Green",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 30,
                            CarId = 6,
                            ColorImage = "vinfast-vf9-blue.png",
                            ColorName = "Blue",
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("WebAPI.Models.CarDeposit", b =>
                {
                    b.Property<Guid>("CarDepsoitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Deposit Payment ID");

                    b.Property<string>("Amount")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Amount");

                    b.Property<int>("CarId")
                        .HasColumnType("int")
                        .HasColumnName("Car ID");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("Created At");

                    b.Property<string>("OrderInfo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Order Info");

                    b.Property<string>("TransactionStatus")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Transaction Status");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("User ID");

                    b.HasKey("CarDepsoitId");

                    b.HasIndex("CarId");

                    b.HasIndex("UserId");

                    b.ToTable("CarDeposit");
                });

            modelBuilder.Entity("WebAPI.Models.Cars", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Car ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Image");

                    b.Property<string>("ImageBanner")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Image Banner");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("Is Deleted");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Car Name");

                    b.Property<double>("PriceBatteryOwn")
                        .HasColumnType("float")
                        .HasColumnName("Price Battery Own");

                    b.Property<double>("PriceBatteryRental")
                        .HasColumnType("float")
                        .HasColumnName("Price Battery Rental");

                    b.Property<double>("PriceDeposite")
                        .HasColumnType("float")
                        .HasColumnName("Price Deposite");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("Quantity");

                    b.Property<int>("Seats")
                        .HasColumnType("int")
                        .HasColumnName("Seats");

                    b.Property<string>("SpecImage")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Spec Image");

                    b.HasKey("Id");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Image = "vinfast-vf3.png",
                            ImageBanner = "vinfast-banner.png",
                            IsDeleted = false,
                            Name = "Vinfast VF3",
                            PriceBatteryOwn = 322000000.0,
                            PriceBatteryRental = 240000000.0,
                            PriceDeposite = 15000000.0,
                            Quantity = 10,
                            Seats = 4,
                            SpecImage = "vinfast-vf3-spec.png"
                        },
                        new
                        {
                            Id = 2,
                            Image = "vinfast-vf5.png",
                            ImageBanner = "vinfast-banner.png",
                            IsDeleted = false,
                            Name = "Vinfast VF5",
                            PriceBatteryOwn = 540000000.0,
                            PriceBatteryRental = 460000000.0,
                            PriceDeposite = 20000000.0,
                            Quantity = 10,
                            Seats = 5,
                            SpecImage = "vinfast-vf5-spec.png"
                        },
                        new
                        {
                            Id = 3,
                            Image = "vinfast-vf6.png",
                            ImageBanner = "vinfast-banner.png",
                            IsDeleted = false,
                            Name = "Vinfast VF6",
                            PriceBatteryOwn = 765000000.0,
                            PriceBatteryRental = 675000000.0,
                            PriceDeposite = 30000000.0,
                            Quantity = 10,
                            Seats = 5,
                            SpecImage = "vinfast-vf6-spec.png"
                        },
                        new
                        {
                            Id = 4,
                            Image = "vinfast-vf7.png",
                            ImageBanner = "vinfast-banner.png",
                            IsDeleted = false,
                            Name = "Vinfast VF7",
                            PriceBatteryOwn = 999000000.0,
                            PriceBatteryRental = 850000000.0,
                            PriceDeposite = 50000000.0,
                            Quantity = 10,
                            Seats = 5,
                            SpecImage = "vinfast-vf7-spec.png"
                        },
                        new
                        {
                            Id = 5,
                            Image = "vinfast-vf8.png",
                            ImageBanner = "vinfast-banner.png",
                            IsDeleted = false,
                            Name = "Vinfast VF8",
                            PriceBatteryOwn = 1359000000.0,
                            PriceBatteryRental = 1170000000.0,
                            PriceDeposite = 50000000.0,
                            Quantity = 10,
                            Seats = 5,
                            SpecImage = "vinfast-vf8-spec.png"
                        },
                        new
                        {
                            Id = 6,
                            Image = "vinfast-vf9.png",
                            ImageBanner = "vinfast-banner.png",
                            IsDeleted = false,
                            Name = "Vinfast VF9",
                            PriceBatteryOwn = 2129000000.0,
                            PriceBatteryRental = 1604000000.0,
                            PriceDeposite = 50000000.0,
                            Quantity = 10,
                            Seats = 7,
                            SpecImage = "vinfast-vf9-spec.png"
                        });
                });

            modelBuilder.Entity("WebAPI.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Category ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("Is Deleted");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Category Name");

                    b.Property<int>("ParentsId")
                        .HasColumnType("int")
                        .HasColumnName("Category Parents ID");

                    b.HasKey("Id");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Name = "New product",
                            ParentsId = 0
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Name = "LifeStyle",
                            ParentsId = 0
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            Name = "Electric car accessories",
                            ParentsId = 0
                        },
                        new
                        {
                            Id = 4,
                            IsDeleted = false,
                            Name = "Gasoline car accessories",
                            ParentsId = 0
                        },
                        new
                        {
                            Id = 5,
                            IsDeleted = false,
                            Name = "Accessories of VF3",
                            ParentsId = 3
                        },
                        new
                        {
                            Id = 6,
                            IsDeleted = false,
                            Name = "Accessories of VF5",
                            ParentsId = 3
                        },
                        new
                        {
                            Id = 7,
                            IsDeleted = false,
                            Name = "Accessories of VF6",
                            ParentsId = 3
                        },
                        new
                        {
                            Id = 8,
                            IsDeleted = false,
                            Name = "Accessories of VF7",
                            ParentsId = 3
                        },
                        new
                        {
                            Id = 9,
                            IsDeleted = false,
                            Name = "Accessories of VF8",
                            ParentsId = 3
                        },
                        new
                        {
                            Id = 10,
                            IsDeleted = false,
                            Name = "Accessories of VF9",
                            ParentsId = 3
                        });
                });

            modelBuilder.Entity("WebAPI.Models.Roles", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Role ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Role Name");

                    b.HasKey("RoleId");

                    b.ToTable("User Roles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            RoleName = "Admin"
                        },
                        new
                        {
                            RoleId = 2,
                            RoleName = "User"
                        });
                });

            modelBuilder.Entity("WebAPI.Models.Users", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("User ID");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("User Address");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("Created At");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("User Email");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("Is Deleted");

                    b.Property<DateTime>("LastChange")
                        .HasColumnType("datetime2")
                        .HasColumnName("Last Change");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("User Password");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Phone Number");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("User Role");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("User Name");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d3b8a1e1-4d3b-4c3b-8a1e-1d3b4c3b8a1e"),
                            Address = "123 Admin St",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "admin@example.com",
                            IsDeleted = false,
                            LastChange = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Password = "5f906f7241ecb0badc32dba89d16b09ca3c9f550aec06a15a4d0c2f1e57f8ed2",
                            Phone = "1234567890",
                            RoleId = 1,
                            UserName = "admin"
                        },
                        new
                        {
                            Id = new Guid("e4b8a1e1-5d4b-5c4b-9a1e-2d4b5c4b9a1e"),
                            Address = "456 User St",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "user@example.com",
                            IsDeleted = false,
                            LastChange = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Password = "e7f5c00bfc7067a49da98fa9b1eacd8d428a4632197edaa84c9dacd40ca35050",
                            Phone = "0987654321",
                            RoleId = 2,
                            UserName = "User A"
                        });
                });

            modelBuilder.Entity("WebAPI.Models.Accessory", b =>
                {
                    b.HasOne("WebAPI.Models.Category", "Category")
                        .WithMany("Accessories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("WebAPI.Models.AccessoryColor", b =>
                {
                    b.HasOne("WebAPI.Models.Accessory", "Accessory")
                        .WithMany("AccessoryColors")
                        .HasForeignKey("AccessoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Accessory");
                });

            modelBuilder.Entity("WebAPI.Models.CarColor", b =>
                {
                    b.HasOne("WebAPI.Models.Cars", "Car")
                        .WithMany("CarColors")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");
                });

            modelBuilder.Entity("WebAPI.Models.CarDeposit", b =>
                {
                    b.HasOne("WebAPI.Models.Cars", "Car")
                        .WithMany("CarDeposits")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAPI.Models.Users", "User")
                        .WithMany("CarDeposits")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebAPI.Models.Users", b =>
                {
                    b.HasOne("WebAPI.Models.Roles", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("WebAPI.Models.Accessory", b =>
                {
                    b.Navigation("AccessoryColors");
                });

            modelBuilder.Entity("WebAPI.Models.Cars", b =>
                {
                    b.Navigation("CarColors");

                    b.Navigation("CarDeposits");
                });

            modelBuilder.Entity("WebAPI.Models.Category", b =>
                {
                    b.Navigation("Accessories");
                });

            modelBuilder.Entity("WebAPI.Models.Roles", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("WebAPI.Models.Users", b =>
                {
                    b.Navigation("CarDeposits");
                });
#pragma warning restore 612, 618
        }
    }
}
