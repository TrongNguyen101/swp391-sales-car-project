// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAPI.DataContext;

#nullable disable

namespace WebAPI.Migrations
{
    [DbContext(typeof(VinfastContext))]
    [Migration("20250328231552_Add_more_User_data")]
    partial class Add_more_User_data
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebAPI.Models.Accessory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Accessory ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("Category ID");

                    b.Property<string>("Color")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Color");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<string>("Dimensions")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Dimensions");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Accessory Image");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("Is Deleted");

                    b.Property<bool>("IsShowed")
                        .HasColumnType("bit")
                        .HasColumnName("Is Showed");

                    b.Property<string>("Material")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Material");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Accessory Name");

                    b.Property<string>("Origin")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Origin");

                    b.Property<double>("Price")
                        .HasColumnType("float")
                        .HasColumnName("Accessory Price");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("Quantity");

                    b.Property<string>("Warranty")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Warranty");

                    b.Property<double?>("Weight")
                        .HasColumnType("float")
                        .HasColumnName("Weight");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Accessory");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 2,
                            Color = "White",
                            Description = "A convenient home charger for your VinFast electric vehicle.",
                            Dimensions = "30x20x10 cm",
                            Image = "Sac_tai_nha.png",
                            IsDeleted = false,
                            IsShowed = true,
                            Material = "Plastic",
                            Name = "VinFast Home Charger",
                            Origin = "Vietnam",
                            Price = 6000000.0,
                            Quantity = 10,
                            Warranty = "1 year",
                            Weight = 2.5
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 5,
                            Color = "Black",
                            Description = "Durable rubber floor mats for the VinFast VF3.",
                            Dimensions = "50x40x5 cm",
                            Image = "VF3_tham_nhua.png",
                            IsDeleted = false,
                            IsShowed = true,
                            Material = "Rubber",
                            Name = "VF3 Plastic Carpet",
                            Origin = "Vietnam",
                            Price = 1668000.0,
                            Quantity = 10,
                            Warranty = "6 months",
                            Weight = 1.2
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 5,
                            Color = "Black",
                            Description = "High-quality rearview camera for the VinFast VF3.",
                            Dimensions = "10x5x5 cm",
                            Image = "VF3_Camera_lui.png",
                            IsDeleted = false,
                            IsShowed = true,
                            Material = "Metal",
                            Name = "VF 3 Rear Camera",
                            Origin = "Japan",
                            Price = 26720000.0,
                            Quantity = 10,
                            Warranty = "2 years",
                            Weight = 0.29999999999999999
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 6,
                            Color = "Black",
                            Description = "Durable rubber floor mats for the VinFast VF5.",
                            Dimensions = "50x40x5 cm",
                            Image = "VF5_tham_nhua.png",
                            IsDeleted = false,
                            IsShowed = true,
                            Material = "Rubber",
                            Name = "VF 5 Plastic Floor Mats",
                            Origin = "Vietnam",
                            Price = 1969000.0,
                            Quantity = 10,
                            Warranty = "6 months",
                            Weight = 1.2
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 6,
                            Color = "Transparent",
                            Description = "Heat-resistant film package for the VinFast VF5.",
                            Dimensions = "100x50x0.1 cm",
                            Image = "VF5_Goi_dan_phim_cach_nhiet.png",
                            IsDeleted = false,
                            IsShowed = true,
                            Material = "Film",
                            Name = "VF 5 Heat Insulation Film Package",
                            Origin = "Vietnam",
                            Price = 5500000.0,
                            Quantity = 10,
                            Warranty = "1 year",
                            Weight = 0.5
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 6,
                            Color = "Black",
                            Description = "3D trunk mat for the VinFast VF5.",
                            Dimensions = "100x80x5 cm",
                            Image = "VF5_Tham_cop.png",
                            IsDeleted = false,
                            IsShowed = true,
                            Material = "Rubber",
                            Name = "VF 5 3D Trunk Mat",
                            Origin = "Vietnam",
                            Price = 990000.0,
                            Quantity = 10,
                            Warranty = "6 months",
                            Weight = 2.0
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 7,
                            Color = "Transparent",
                            Description = "Heat-resistant film package for the VinFast VF6.",
                            Dimensions = "100x50x0.1 cm",
                            Image = "VF6_Goi_dan_phim_cach_nhiet.png",
                            IsDeleted = false,
                            IsShowed = true,
                            Material = "Film",
                            Name = "VF 6 Heat Insulation Film Package",
                            Origin = "Vietnam",
                            Price = 5500000.0,
                            Quantity = 10,
                            Warranty = "1 year",
                            Weight = 0.5
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 7,
                            Color = "Black",
                            Description = "Durable rubber floor mats for the VinFast VF6.",
                            Dimensions = "50x40x5 cm",
                            Image = "VF6_tham_nhua.png",
                            IsDeleted = false,
                            IsShowed = true,
                            Material = "Rubber",
                            Name = "VF 6 3D Plastic Floor Mats",
                            Origin = "Vietnam",
                            Price = 1990000.0,
                            Quantity = 10,
                            Warranty = "6 months",
                            Weight = 1.2
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 7,
                            Color = "Black",
                            Description = "3D trunk mat for the VinFast VF6.",
                            Dimensions = "100x80x5 cm",
                            Image = "VF6_Tham_cop.png",
                            IsDeleted = false,
                            IsShowed = true,
                            Material = "Rubber",
                            Name = "VF 6 3D Trunk Mat",
                            Origin = "Vietnam",
                            Price = 990000.0,
                            Quantity = 10,
                            Warranty = "6 months",
                            Weight = 2.0
                        },
                        new
                        {
                            Id = 201,
                            CategoryId = 7,
                            Color = "Black",
                            Description = "3D trunk mat for the VinFast VF7.",
                            Dimensions = "100x80x5 cm",
                            Image = "Tham_Cop_3D_VF7.png",
                            IsDeleted = false,
                            IsShowed = true,
                            Material = "Rubber",
                            Name = "VF 7 3D Trunk Mat",
                            Origin = "Vietnam",
                            Price = 990000.0,
                            Quantity = 8,
                            Warranty = "6 months",
                            Weight = 2.0
                        },
                        new
                        {
                            Id = 202,
                            CategoryId = 8,
                            Color = "Black",
                            Description = "VF x 3M heat insulation film products help insulate, block infrared radiation, eliminate UV rays, effectively reduce glare to improve the customer experience in the car, protect customers from harmful rays as well as increase the durability of the car's interior. Warranty.",
                            Dimensions = "100x80x5 cm",
                            Image = "Goi_Dan_Film_Cach_Nhiet_VinFast_VF7.png",
                            IsDeleted = false,
                            IsShowed = true,
                            Material = "Rubber",
                            Name = "VF 7 Heat Insulation Film Package",
                            Origin = "Vietnam",
                            Price = 5500000.0,
                            Quantity = 10,
                            Warranty = "6 months",
                            Weight = 2.0
                        },
                        new
                        {
                            Id = 203,
                            CategoryId = 8,
                            Color = "Black",
                            Description = "VinFast VF 7 floor mats are molded mats manufactured in Vietnam, according to Japanese production lines. Made from high-quality, non-toxic TPE plastic material.",
                            Dimensions = "100x80x5 cm",
                            Image = "Tham_San_3D_VF_7.png",
                            IsDeleted = false,
                            IsShowed = true,
                            Material = " TPE plastic",
                            Name = "3D Floor Mat VF 7",
                            Origin = "Vietnam",
                            Price = 540000.0,
                            Quantity = 10,
                            Warranty = "6 months",
                            Weight = 2.0
                        },
                        new
                        {
                            Id = 204,
                            CategoryId = 9,
                            Color = "Black",
                            Description = "The car roof rack for VinFast VF 8 is an ideal choice to expand storage space during journeys. Modern, convenient design with superior quality, the product brings convenience and style to every trip.",
                            Dimensions = "100x80x5 cm",
                            Image = "Cop_Noc_Phi_Thuyen_Oto_VinFast_ VF8.png",
                            IsDeleted = false,
                            IsShowed = true,
                            Material = "Rubber",
                            Name = "VinFast VF 8 Car Roof Top Box",
                            Origin = "Vietnam",
                            Price = 7000000.0,
                            Quantity = 10,
                            Warranty = "6 months",
                            Weight = 2.0
                        },
                        new
                        {
                            Id = 205,
                            CategoryId = 9,
                            Color = "Black",
                            Description = "VinFast VF 8 floor mats are molded mats manufactured in Vietnam, according to Japanese production lines. Made from high-quality, non-toxic TPE plastic material.",
                            Dimensions = "100x80x5 cm",
                            Image = "Tham_San_Nhua_2D_VF8.png",
                            IsDeleted = false,
                            IsShowed = true,
                            Material = "Plastic",
                            Name = "2D VF 8 Plastic Floor Mats",
                            Origin = "Vietnam",
                            Price = 2210000.0,
                            Quantity = 10,
                            Warranty = "6 months",
                            Weight = 2.0
                        },
                        new
                        {
                            Id = 206,
                            CategoryId = 9,
                            Color = "Black",
                            Description = "VF x 3M heat insulation film products help insulate, block infrared radiation, eliminate UV rays, effectively reduce glare to improve the customer experience in the car, protect customers from harmful rays as well as increase the durability of the car's interior. Warranty",
                            Dimensions = "100x80x5 cm",
                            Image = "Goi_Film_Cach_Nhiet_Dan_Tran_VinFast_VF8.png",
                            IsDeleted = false,
                            IsShowed = true,
                            Material = "Ceramic is coated with Titanium Nitride technology.",
                            Name = "Ceiling Heat Insulation Film Package",
                            Origin = "Vietnam",
                            Price = 7000000.0,
                            Quantity = 10,
                            Warranty = "6 months",
                            Weight = 2.0
                        });
                });

            modelBuilder.Entity("WebAPI.Models.AccessoryImage", b =>
                {
                    b.Property<int>("ColorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Color ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ColorId"));

                    b.Property<int>("AccessoryId")
                        .HasColumnType("int")
                        .HasColumnName("Accessory ID");

                    b.Property<string>("ColorImage")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Color Image");

                    b.Property<string>("ColorName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Color Name");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("Is Deleted");

                    b.HasKey("ColorId");

                    b.HasIndex("AccessoryId");

                    b.ToTable("AccessoryImage");

                    b.HasData(
                        new
                        {
                            ColorId = 1,
                            AccessoryId = 1,
                            ColorImage = "homecharger-1.png",
                            ColorName = "White",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 2,
                            AccessoryId = 1,
                            ColorImage = "homecharger-2.png",
                            ColorName = "White",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 3,
                            AccessoryId = 1,
                            ColorImage = "homecharger-3.png",
                            ColorName = "White",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 4,
                            AccessoryId = 1,
                            ColorImage = "homecharger-4.png",
                            ColorName = "White",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 5,
                            AccessoryId = 2,
                            ColorImage = "VF3_tham_nhua_detail1.png",
                            ColorName = "White",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 6,
                            AccessoryId = 2,
                            ColorImage = "VF3_tham_nhua_detail2.png",
                            ColorName = "White",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 7,
                            AccessoryId = 3,
                            ColorImage = "VF3_camera_lui_1.jpg",
                            ColorName = "White",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 8,
                            AccessoryId = 3,
                            ColorImage = "VF3_camera_lui_1.jpg",
                            ColorName = "White",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 201,
                            AccessoryId = 201,
                            ColorImage = "Tham_Cop_3D_VF7.png",
                            ColorName = "White",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 202,
                            AccessoryId = 202,
                            ColorImage = "Goi_Dan_Film_Cach_Nhiet_VinFast_VF7.png",
                            ColorName = "White",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 203,
                            AccessoryId = 203,
                            ColorImage = "Tham_San_3D_VF_7.png",
                            ColorName = "White",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 204,
                            AccessoryId = 203,
                            ColorImage = "Tham_San_3D_VF72.png",
                            ColorName = "White",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 205,
                            AccessoryId = 204,
                            ColorImage = "Cop_Noc_Phi_Thuyen_Oto_VinFast_ VF8.png",
                            ColorName = "White",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 206,
                            AccessoryId = 204,
                            ColorImage = "Cop_Noc_Phi_Thuyen_O_To_VinFast_VF82.png",
                            ColorName = "White",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 207,
                            AccessoryId = 205,
                            ColorImage = "Tham_San_Nhua_2D_VF8.png",
                            ColorName = "White",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 208,
                            AccessoryId = 205,
                            ColorImage = "Tham_San_Nhua_2D_VF82.png",
                            ColorName = "White",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 209,
                            AccessoryId = 205,
                            ColorImage = "Tham_San_Nhua_2D_VF83.png",
                            ColorName = "White",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 210,
                            AccessoryId = 205,
                            ColorImage = "Tham_San_Nhua_2D_VF84.png",
                            ColorName = "White",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 211,
                            AccessoryId = 206,
                            ColorImage = "Goi_Film_Cach_Nhiet_Dan_Tran_VinFast_VF8.png",
                            ColorName = "White",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 212,
                            AccessoryId = 4,
                            ColorImage = "VF5_tham_nhua.png",
                            ColorName = "White",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 213,
                            AccessoryId = 4,
                            ColorImage = "Tham San Nhua 2D VF 52.png",
                            ColorName = "White",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 214,
                            AccessoryId = 4,
                            ColorImage = "Tham San Nhua 2D VF 53.png",
                            ColorName = "White",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 215,
                            AccessoryId = 4,
                            ColorImage = "Tham San Nhua 2D VF 54.png",
                            ColorName = "White",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 216,
                            AccessoryId = 4,
                            ColorImage = "Tham San Nhua 2D VF 55.png",
                            ColorName = "White",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 217,
                            AccessoryId = 9,
                            ColorImage = "VF6_Tham_cop.png",
                            ColorName = "White",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 218,
                            AccessoryId = 9,
                            ColorImage = "Tham Cop 3D VF 62.png",
                            ColorName = "White",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 219,
                            AccessoryId = 8,
                            ColorImage = "VF6_tham_nhua.png",
                            ColorName = "White",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 220,
                            AccessoryId = 8,
                            ColorImage = "Tham San Nhua 2D VF 62.png",
                            ColorName = "White",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 221,
                            AccessoryId = 7,
                            ColorImage = "VF6_Goi_dan_phim_cach_nhiet.png",
                            ColorName = "White",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 222,
                            AccessoryId = 5,
                            ColorImage = "VF5_Goi_dan_phim_cach_nhiet.png",
                            ColorName = "White",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 223,
                            AccessoryId = 6,
                            ColorImage = "VF5_Tham_cop.png",
                            ColorName = "White",
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("WebAPI.Models.CarColor", b =>
                {
                    b.Property<int>("ColorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Color ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ColorId"));

                    b.Property<int>("CarId")
                        .HasColumnType("int")
                        .HasColumnName("Car ID");

                    b.Property<string>("ColorImage")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Color Image");

                    b.Property<string>("ColorName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Color Name");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("Is Deleted");

                    b.HasKey("ColorId");

                    b.HasIndex("CarId");

                    b.ToTable("CarColor");

                    b.HasData(
                        new
                        {
                            ColorId = 1,
                            CarId = 1,
                            ColorImage = "vinfast-vf3-white.png",
                            ColorName = "White",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 2,
                            CarId = 1,
                            ColorImage = "vinfast-vf3-grey.png",
                            ColorName = "Grey",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 3,
                            CarId = 1,
                            ColorImage = "vinfast-vf3-red.png",
                            ColorName = "Red",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 4,
                            CarId = 1,
                            ColorImage = "vinfast-vf3-yellow.png",
                            ColorName = "Yellow",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 5,
                            CarId = 1,
                            ColorImage = "vinfast-vf3-green.png",
                            ColorName = "Green",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 6,
                            CarId = 2,
                            ColorImage = "vinfast-vf5-white.png",
                            ColorName = "White",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 7,
                            CarId = 2,
                            ColorImage = "vinfast-vf5-grey.png",
                            ColorName = "Grey",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 8,
                            CarId = 2,
                            ColorImage = "vinfast-vf5-red.png",
                            ColorName = "Red",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 9,
                            CarId = 2,
                            ColorImage = "vinfast-vf5-yellow.png",
                            ColorName = "Yellow",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 10,
                            CarId = 2,
                            ColorImage = "vinfast-vf5-green.png",
                            ColorName = "Green",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 11,
                            CarId = 3,
                            ColorImage = "vinfast-vf6-white.png",
                            ColorName = "White",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 12,
                            CarId = 3,
                            ColorImage = "vinfast-vf6-black.png",
                            ColorName = "Black",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 13,
                            CarId = 3,
                            ColorImage = "vinfast-vf6-red.png",
                            ColorName = "Red",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 14,
                            CarId = 3,
                            ColorImage = "vinfast-vf6-green.png",
                            ColorName = "Green",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 15,
                            CarId = 3,
                            ColorImage = "vinfast-vf6-blue.png",
                            ColorName = "Blue",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 16,
                            CarId = 4,
                            ColorImage = "vinfast-vf7-white.png",
                            ColorName = "White",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 17,
                            CarId = 4,
                            ColorImage = "vinfast-vf7-black.png",
                            ColorName = "Black",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 18,
                            CarId = 4,
                            ColorImage = "vinfast-vf7-red.png",
                            ColorName = "Red",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 19,
                            CarId = 4,
                            ColorImage = "vinfast-vf7-green.png",
                            ColorName = "Green",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 20,
                            CarId = 4,
                            ColorImage = "vinfast-vf7-blue.png",
                            ColorName = "Blue",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 21,
                            CarId = 5,
                            ColorImage = "vinfast-vf8-white.png",
                            ColorName = "White",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 22,
                            CarId = 5,
                            ColorImage = "vinfast-vf8-black.png",
                            ColorName = "Black",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 23,
                            CarId = 5,
                            ColorImage = "vinfast-vf8-red.png",
                            ColorName = "Red",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 24,
                            CarId = 5,
                            ColorImage = "vinfast-vf8-green.png",
                            ColorName = "Green",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 25,
                            CarId = 5,
                            ColorImage = "vinfast-vf8-blue.png",
                            ColorName = "Blue",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 26,
                            CarId = 6,
                            ColorImage = "vinfast-vf9-white.png",
                            ColorName = "White",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 27,
                            CarId = 6,
                            ColorImage = "vinfast-vf9-black.png",
                            ColorName = "Black",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 28,
                            CarId = 6,
                            ColorImage = "vinfast-vf9-red.png",
                            ColorName = "Red",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 29,
                            CarId = 6,
                            ColorImage = "vinfast-vf9-green.png",
                            ColorName = "Green",
                            IsDeleted = false
                        },
                        new
                        {
                            ColorId = 30,
                            CarId = 6,
                            ColorImage = "vinfast-vf9-blue.png",
                            ColorName = "Blue",
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("WebAPI.Models.CarDeposit", b =>
                {
                    b.Property<Guid>("CarDepsoitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Deposit Payment ID");

                    b.Property<string>("Amount")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Amount");

                    b.Property<int>("CarId")
                        .HasColumnType("int")
                        .HasColumnName("Car ID");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("Created At");

                    b.Property<string>("OrderInfo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Order Info");

                    b.Property<string>("TransactionStatus")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Transaction Status");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("User ID");

                    b.HasKey("CarDepsoitId");

                    b.HasIndex("CarId");

                    b.HasIndex("UserId");

                    b.ToTable("CarDeposit");
                });

            modelBuilder.Entity("WebAPI.Models.Cars", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Car ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Image");

                    b.Property<string>("ImageBanner")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Image Banner");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("Is Deleted");

                    b.Property<bool>("IsShowed")
                        .HasColumnType("bit")
                        .HasColumnName("Is Show");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Car Name");

                    b.Property<double>("PriceBatteryOwn")
                        .HasColumnType("float")
                        .HasColumnName("Price Battery Own");

                    b.Property<double>("PriceBatteryRental")
                        .HasColumnType("float")
                        .HasColumnName("Price Battery Rental");

                    b.Property<double>("PriceDeposite")
                        .HasColumnType("float")
                        .HasColumnName("Price Deposite");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("Quantity");

                    b.Property<int>("Seats")
                        .HasColumnType("int")
                        .HasColumnName("Seats");

                    b.Property<string>("SpecImage")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Spec Image");

                    b.HasKey("Id");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Image = "vinfast-vf3.png",
                            ImageBanner = "vinfast-banner.png",
                            IsDeleted = false,
                            IsShowed = true,
                            Name = "Vinfast VF3",
                            PriceBatteryOwn = 322000000.0,
                            PriceBatteryRental = 240000000.0,
                            PriceDeposite = 15000000.0,
                            Quantity = 10,
                            Seats = 4,
                            SpecImage = "vinfast-vf3-spec.png"
                        },
                        new
                        {
                            Id = 2,
                            Image = "vinfast-vf5.png",
                            ImageBanner = "vinfast-banner.png",
                            IsDeleted = false,
                            IsShowed = true,
                            Name = "Vinfast VF5",
                            PriceBatteryOwn = 540000000.0,
                            PriceBatteryRental = 460000000.0,
                            PriceDeposite = 20000000.0,
                            Quantity = 10,
                            Seats = 5,
                            SpecImage = "vinfast-vf5-spec.png"
                        },
                        new
                        {
                            Id = 3,
                            Image = "vinfast-vf6.png",
                            ImageBanner = "vinfast-banner.png",
                            IsDeleted = false,
                            IsShowed = true,
                            Name = "Vinfast VF6",
                            PriceBatteryOwn = 765000000.0,
                            PriceBatteryRental = 675000000.0,
                            PriceDeposite = 30000000.0,
                            Quantity = 10,
                            Seats = 5,
                            SpecImage = "vinfast-vf6-spec.png"
                        },
                        new
                        {
                            Id = 4,
                            Image = "vinfast-vf7.png",
                            ImageBanner = "vinfast-banner.png",
                            IsDeleted = false,
                            IsShowed = true,
                            Name = "Vinfast VF7",
                            PriceBatteryOwn = 999000000.0,
                            PriceBatteryRental = 850000000.0,
                            PriceDeposite = 50000000.0,
                            Quantity = 10,
                            Seats = 5,
                            SpecImage = "vinfast-vf7-spec.png"
                        },
                        new
                        {
                            Id = 5,
                            Image = "vinfast-vf8.png",
                            ImageBanner = "vinfast-banner.png",
                            IsDeleted = false,
                            IsShowed = true,
                            Name = "Vinfast VF8",
                            PriceBatteryOwn = 1359000000.0,
                            PriceBatteryRental = 1170000000.0,
                            PriceDeposite = 50000000.0,
                            Quantity = 10,
                            Seats = 5,
                            SpecImage = "vinfast-vf8-spec.png"
                        },
                        new
                        {
                            Id = 6,
                            Image = "vinfast-vf9.png",
                            ImageBanner = "vinfast-banner.png",
                            IsDeleted = false,
                            IsShowed = true,
                            Name = "Vinfast VF9",
                            PriceBatteryOwn = 2129000000.0,
                            PriceBatteryRental = 1604000000.0,
                            PriceDeposite = 50000000.0,
                            Quantity = 10,
                            Seats = 7,
                            SpecImage = "vinfast-vf9-spec.png"
                        });
                });

            modelBuilder.Entity("WebAPI.Models.CartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("WebAPI.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Category ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("Is Deleted");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Category Name");

                    b.Property<int>("ParentsId")
                        .HasColumnType("int")
                        .HasColumnName("Category Parents ID");

                    b.HasKey("Id");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Name = "All accessories",
                            ParentsId = 0
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Name = "Common car accessories",
                            ParentsId = 0
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            Name = "Electric car accessories",
                            ParentsId = 0
                        },
                        new
                        {
                            Id = 4,
                            IsDeleted = false,
                            Name = "Gasoline car accessories",
                            ParentsId = 0
                        },
                        new
                        {
                            Id = 5,
                            IsDeleted = false,
                            Name = "Accessories of VF3",
                            ParentsId = 3
                        },
                        new
                        {
                            Id = 6,
                            IsDeleted = false,
                            Name = "Accessories of VF5",
                            ParentsId = 3
                        },
                        new
                        {
                            Id = 7,
                            IsDeleted = false,
                            Name = "Accessories of VF6",
                            ParentsId = 3
                        },
                        new
                        {
                            Id = 8,
                            IsDeleted = false,
                            Name = "Accessories of VF7",
                            ParentsId = 3
                        },
                        new
                        {
                            Id = 9,
                            IsDeleted = false,
                            Name = "Accessories of VF8",
                            ParentsId = 3
                        },
                        new
                        {
                            Id = 10,
                            IsDeleted = false,
                            Name = "Accessories of VF9",
                            ParentsId = 3
                        });
                });

            modelBuilder.Entity("WebAPI.Models.ImportExportHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccessoryId")
                        .HasColumnType("int");

                    b.Property<int?>("CarId")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("AccessoryId");

                    b.HasIndex("CarId");

                    b.ToTable("ImportExportHistory");
                });

            modelBuilder.Entity("WebAPI.Models.Invoice", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("Invoice ID");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Address");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Customer Name");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Email");

                    b.Property<string>("InvoiceInformation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Invoice Informatiom");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit")
                        .HasColumnName("Is Paid");

                    b.Property<DateTime>("PayDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("Pay Date");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Phone");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Status");

                    b.Property<double>("TotalAmount")
                        .HasColumnType("float")
                        .HasColumnName("Total Amount");

                    b.Property<string>("TypeOfProduct")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Type of Product");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("User ID");

                    b.Property<string>("VNPTransactionNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("VNPay Transaction No");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Invoice");
                });

            modelBuilder.Entity("WebAPI.Models.InvoiceItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Item ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccessoryId")
                        .HasColumnType("int");

                    b.Property<int?>("CarId")
                        .HasColumnType("int");

                    b.Property<string>("InvoiceId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("Invoice ID");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("Product Name");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("Quantity");

                    b.Property<double>("UnitPrice")
                        .HasColumnType("float")
                        .HasColumnName("Unit Price");

                    b.HasKey("Id");

                    b.HasIndex("AccessoryId");

                    b.HasIndex("CarId");

                    b.HasIndex("InvoiceId");

                    b.ToTable("InvoiceItem");
                });

            modelBuilder.Entity("WebAPI.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Payment ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("AmountPaid")
                        .HasColumnType("float")
                        .HasColumnName("Amount Paid");

                    b.Property<string>("InvoiceId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsSuccess")
                        .HasColumnType("bit")
                        .HasColumnName("Is Success");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("Payment Date");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Payment Method");

                    b.Property<string>("VNPayOrderInfor")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("VNPay Order Information");

                    b.Property<string>("VNPayResponseCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("VNPay Response Code");

                    b.Property<string>("VNPayTransactionId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("VNPay Transaction ID");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("WebAPI.Models.Roles", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Role ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Role Name");

                    b.HasKey("RoleId");

                    b.ToTable("User Roles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            RoleName = "Admin"
                        },
                        new
                        {
                            RoleId = 2,
                            RoleName = "User"
                        });
                });

            modelBuilder.Entity("WebAPI.Models.TestDriveRegistration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TestDrive ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CarId")
                        .HasColumnType("int")
                        .HasColumnName("Car ID");

                    b.Property<string>("CarName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Car Name");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Customer Email");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Customer Name");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Phone Number");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Status");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.ToTable("TestDriveRegistrations");
                });

            modelBuilder.Entity("WebAPI.Models.Users", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("User ID");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("User Address");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("Created At");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("User Email");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("Is Deleted");

                    b.Property<DateTime>("LastChange")
                        .HasColumnType("datetime2")
                        .HasColumnName("Last Change");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("User Password");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Phone Number");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("User Role");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("User Name");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d3b8a1e1-4d3b-4c3b-8a1e-1d3b4c3b8a1e"),
                            Address = "123 Admin St",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "admin@example.com",
                            IsDeleted = false,
                            LastChange = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Password = "5f906f7241ecb0badc32dba89d16b09ca3c9f550aec06a15a4d0c2f1e57f8ed2",
                            Phone = "1234567890",
                            RoleId = 1,
                            UserName = "admin"
                        },
                        new
                        {
                            Id = new Guid("e4b8a1e1-5d4b-5c4b-9a1e-2d4b5c4b9a1e"),
                            Address = "456 User St",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "user@example.com",
                            IsDeleted = false,
                            LastChange = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Password = "e7f5c00bfc7067a49da98fa9b1eacd8d428a4632197edaa84c9dacd40ca35050",
                            Phone = "0987654321",
                            RoleId = 2,
                            UserName = "User A"
                        },
                        new
                        {
                            Id = new Guid("5168db79-a770-472d-82ed-061cba60f1e1"),
                            Address = "456 User St",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "nguyentrong.se11@gmail.com",
                            IsDeleted = false,
                            LastChange = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Password = "e7f5c00bfc7067a49da98fa9b1eacd8d428a4632197edaa84c9dacd40ca35050",
                            Phone = "0987654321",
                            RoleId = 2,
                            UserName = "Nguyen Trong"
                        });
                });

            modelBuilder.Entity("WebAPI.Models.Accessory", b =>
                {
                    b.HasOne("WebAPI.Models.Category", "Category")
                        .WithMany("Accessories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("WebAPI.Models.AccessoryImage", b =>
                {
                    b.HasOne("WebAPI.Models.Accessory", "Accessory")
                        .WithMany("AccessoryImages")
                        .HasForeignKey("AccessoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Accessory");
                });

            modelBuilder.Entity("WebAPI.Models.CarColor", b =>
                {
                    b.HasOne("WebAPI.Models.Cars", "Car")
                        .WithMany("CarColors")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");
                });

            modelBuilder.Entity("WebAPI.Models.CarDeposit", b =>
                {
                    b.HasOne("WebAPI.Models.Cars", "Car")
                        .WithMany("CarDeposits")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAPI.Models.Users", "User")
                        .WithMany("CarDeposits")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebAPI.Models.CartItem", b =>
                {
                    b.HasOne("WebAPI.Models.Accessory", "Product")
                        .WithMany("CartItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAPI.Models.Users", "User")
                        .WithMany("CartItems")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebAPI.Models.ImportExportHistory", b =>
                {
                    b.HasOne("WebAPI.Models.Accessory", "Accessory")
                        .WithMany("ImportExportHistories")
                        .HasForeignKey("AccessoryId");

                    b.HasOne("WebAPI.Models.Cars", "Car")
                        .WithMany("ImportExportHistories")
                        .HasForeignKey("CarId");

                    b.Navigation("Accessory");

                    b.Navigation("Car");
                });

            modelBuilder.Entity("WebAPI.Models.Invoice", b =>
                {
                    b.HasOne("WebAPI.Models.Users", "User")
                        .WithMany("Invoices")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebAPI.Models.InvoiceItem", b =>
                {
                    b.HasOne("WebAPI.Models.Accessory", "Accessory")
                        .WithMany("InvoiceItems")
                        .HasForeignKey("AccessoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebAPI.Models.Cars", "Car")
                        .WithMany("InvoiceItems")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebAPI.Models.Invoice", "Invoice")
                        .WithMany("InvoiceItems")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Accessory");

                    b.Navigation("Car");

                    b.Navigation("Invoice");
                });

            modelBuilder.Entity("WebAPI.Models.Payment", b =>
                {
                    b.HasOne("WebAPI.Models.Invoice", "Invoice")
                        .WithMany("Payments")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Invoice");
                });

            modelBuilder.Entity("WebAPI.Models.TestDriveRegistration", b =>
                {
                    b.HasOne("WebAPI.Models.Cars", "Car")
                        .WithMany()
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");
                });

            modelBuilder.Entity("WebAPI.Models.Users", b =>
                {
                    b.HasOne("WebAPI.Models.Roles", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("WebAPI.Models.Accessory", b =>
                {
                    b.Navigation("AccessoryImages");

                    b.Navigation("CartItems");

                    b.Navigation("ImportExportHistories");

                    b.Navigation("InvoiceItems");
                });

            modelBuilder.Entity("WebAPI.Models.Cars", b =>
                {
                    b.Navigation("CarColors");

                    b.Navigation("CarDeposits");

                    b.Navigation("ImportExportHistories");

                    b.Navigation("InvoiceItems");
                });

            modelBuilder.Entity("WebAPI.Models.Category", b =>
                {
                    b.Navigation("Accessories");
                });

            modelBuilder.Entity("WebAPI.Models.Invoice", b =>
                {
                    b.Navigation("InvoiceItems");

                    b.Navigation("Payments");
                });

            modelBuilder.Entity("WebAPI.Models.Roles", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("WebAPI.Models.Users", b =>
                {
                    b.Navigation("CarDeposits");

                    b.Navigation("CartItems");

                    b.Navigation("Invoices");
                });
#pragma warning restore 612, 618
        }
    }
}
